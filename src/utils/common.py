import os

def read_file(file_path) -> str:
    if not os.path.exists(file_path):
        print(f"File {file_path} does not exist")
        return ""
    
    try:
        with open(file_path, "r") as file:
            return file.read()
    except Exception as e:
        print(f"Error reading file {file_path}: {e}")
        return ""
    
def clean_markdown_code(code: str) -> str:
    """
    Remove markdown code block markers (```python, ```, etc.) that are often generated by LLMs.
    
    Args:
        code: The code string potentially containing markdown markers
        
    Returns:
        Cleaned code string without markdown markers
    """
    lines = code.split('\n')
    cleaned_lines = []
    
    for line in lines:
        stripped = line.strip()
        # Skip lines that are just markdown code block markers
        if stripped.startswith('```'):
            continue
        cleaned_lines.append(line)
    
    return '\n'.join(cleaned_lines)